{"success": true, "error": null, "results": {"printers": [{"elements": [], "description": "{\n    \"payable\": {\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"Proxy\": [\n            \"()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"LevelOne\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"Properties\": [\n            \"constructor()\"\n        ]\n    },\n    \"timestamp\": {\n        \"LevelOne\": [\n            \"startSession(uint256)\",\n            \"giveReview(address,bool)\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_can_give_review()\"\n        ]\n    },\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"ERC20\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"LevelOne\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"enroll()\",\n            \"addTeacher(address)\",\n            \"removeTeacher(address)\",\n            \"expel(address)\",\n            \"startSession(uint256)\",\n            \"giveReview(address,bool)\",\n            \"graduateAndUpgrade(address,bytes)\"\n        ],\n        \"Handler\": [\n            \"levelOne_addTeacher(address)\",\n            \"levelOne_enroll()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_initialize(address,uint256)\",\n            \"levelOne_removeTeacher(address)\",\n            \"levelOne_startSession(uint256)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\"\n        ],\n        \"Properties\": [\n            \"levelOne_addTeacher(address)\",\n            \"levelOne_enroll()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_initialize(address,uint256)\",\n            \"levelOne_removeTeacher(address)\",\n            \"levelOne_startSession(uint256)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\"\n        ],\n        \"MockUSDC\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_add_teacher()\",\n            \"test_confirm_remove_teacher()\",\n            \"test_confirm_enroll()\",\n            \"test_confirm_can_give_review()\"\n        ],\n        \"Properties\": [\n            \"testProperties()\"\n        ]\n    },\n    \"constant_functions\": {\n        \"Script\": [\n            \"IS_SCRIPT()\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getRawBlockHeader(uint256)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"eip712HashStruct(string,bytes)\",\n            \"eip712HashStruct(string,string,bytes)\",\n            \"eip712HashType(string)\",\n            \"eip712HashType(string,string)\",\n            \"eip712HashTypedData(string)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomAddress()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint()\",\n            \"randomUint(uint256,uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getRawBlockHeader(uint256)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"eip712HashStruct(string,bytes)\",\n            \"eip712HashStruct(string,string,bytes)\",\n            \"eip712HashType(string)\",\n            \"eip712HashType(string,string)\",\n            \"eip712HashTypedData(string)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomAddress()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint()\",\n            \"randomUint(uint256,uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"DevOpsTools\": [\n            \"vm()\",\n            \"RELATIVE_BROADCAST_PATH()\"\n        ],\n        \"IERC1363\": [\n            \"supportsInterface(bytes4)\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC1822Proxiable\": [\n            \"proxiableUUID()\"\n        ],\n        \"IBeacon\": [\n            \"implementation()\"\n        ],\n        \"ERC20\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20Metadata\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"proxiableUUID()\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"DeployLevelOne\": [\n            \"getProxyAddress()\",\n            \"getImplementationAddress()\",\n            \"getUSDC()\",\n            \"getPrincipal()\",\n            \"getSchoolFees()\",\n            \"IS_SCRIPT()\",\n            \"principal()\",\n            \"schoolFees()\",\n            \"levelOneImplementation()\",\n            \"proxy()\"\n        ],\n        \"GraduateToLevelTwo\": [\n            \"IS_SCRIPT()\",\n            \"levelOneProxyAddress()\"\n        ],\n        \"LevelOne\": [\n            \"proxiableUUID()\",\n            \"getPrincipal()\",\n            \"getSchoolFeesCost()\",\n            \"getSchoolFeesToken()\",\n            \"getTotalTeachers()\",\n            \"getTotalStudents()\",\n            \"getListOfStudents()\",\n            \"getListOfTeachers()\",\n            \"getSessionStatus()\",\n            \"getSessionEnd()\",\n            \"UPGRADE_INTERFACE_VERSION()\",\n            \"reviewTime()\",\n            \"sessionEnd()\",\n            \"bursary()\",\n            \"cutOffScore()\",\n            \"isTeacher(address)\",\n            \"isStudent(address)\",\n            \"studentScore(address)\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\"\n        ],\n        \"LevelTwo\": [\n            \"getPrincipal()\",\n            \"getSchoolFeesToken()\",\n            \"getTotalTeachers()\",\n            \"getTotalStudents()\",\n            \"getListOfStudents()\",\n            \"getListOfTeachers()\",\n            \"sessionEnd()\",\n            \"bursary()\",\n            \"cutOffScore()\",\n            \"isTeacher(address)\",\n            \"isStudent(address)\",\n            \"studentScore(address)\",\n            \"TEACHER_WAGE_L2()\",\n            \"PRINCIPAL_WAGE_L2()\",\n            \"PRECISION()\"\n        ],\n        \"BeforeAfter\": [\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"test_confirm_first_deployment_is_level_one()\",\n            \"IS_TEST()\"\n        ],\n        \"Setup\": [\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"Handler\": [\n            \"getTrackedTeachers()\",\n            \"getTrackedStudents()\",\n            \"getTrackedTeacherCount()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedTeacher(address)\",\n            \"isTrackedStudent(address)\",\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"Properties\": [\n            \"getTrackedTeachers()\",\n            \"getTrackedStudents()\",\n            \"getTrackedTeacherCount()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedTeacher(address)\",\n            \"isTrackedStudent(address)\",\n            \"testProperties()\",\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"MockUSDC\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ]\n    },\n    \"constants_used\": {\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"ERC1967Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"DeployLevelOne\": {\n            \"run()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deployLevelOne()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"getPrincipal()\": [\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"getSchoolFees()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"No contract named \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"$.transactions[\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"].contractAddress\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ERC1967Proxy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\\\\",\n                        \"type\": \"bytes1\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"./broadcast\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"]\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"'\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"/\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \".json\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \".timestamp\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dry-run\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" has been deployed on chain \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No deployment artifacts were found for specified chain\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"].contractName\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"deployLevelTwo()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"run()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"LevelOne\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"enroll()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"expel(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2419200\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"Reviews can only be given once per week\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"604800\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student review count exceeded!!!\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"35\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"LevelTwo\": {\n            \"graduate()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"LevelOneAndGraduateTest\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"first_teacher\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"six_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"fifth_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"first_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"second_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"second_teacher\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"third_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"fourth_student\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"test_confirm_first_deployment_is_level_one()\": [\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"35\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"test_confirm_add_teacher()\": [\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_add_teacher_if_not_principal()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"588585904\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_add_teacher_twice()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2524366672\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_remove_teacher()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_enroll()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_enroll_without_school_fees()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"no_school_fees\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_enroll_twice()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3353848930\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_can_give_review()\": [\n                [\n                    {\n                        \"value\": \"90\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"604800\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_can_graduate()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(uint256)\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_enroll()\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teachers and principal cannot enroll\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_expel(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student not found\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot expel during session\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only teacher can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_initialize(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher not found\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Session already started\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isTrackedTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"isTrackedStudent(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_enroll()\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teachers and principal cannot enroll\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_expel(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student not found\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot expel during session\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only teacher can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_initialize(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher not found\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Session already started\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isTrackedTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"isTrackedStudent(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3276841397\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"testProperties()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"MockUSDC\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"Mock USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"mUSDC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"mint(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"LevelOne\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"enroll()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"False\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"2419200\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"giveReview(address,bool)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"5\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"graduateAndUpgrade(address,bytes)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"LevelOneAndGraduateTest\": {\n            \"test_confirm_add_teacher()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"test_confirm_remove_teacher()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"False\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"test_confirm_can_give_review()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"604800\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"90\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedTeacher(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedStudent(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedTeacher(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedStudent(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"Script\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prankHere(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdConstants\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRawBlockHeader(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopRecord()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashTypedData(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSeed(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRawBlockHeader(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopRecord()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashTypedData(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSeed(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accessList((address,bytes32[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cool(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coolSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"noAccessList()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warmSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate2(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"interceptInitcode()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"DevOpsTools\": {},\n        \"StringUtils\": {},\n        \"IERC1363\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC1967\": {},\n        \"IERC1822Proxiable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Errors\": {},\n        \"IERC721Errors\": {},\n        \"IERC1155Errors\": {},\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Utils\": {},\n        \"Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IBeacon\": {\n            \"implementation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC20\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Metadata\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"SafeERC20\": {},\n        \"Address\": {},\n        \"Context\": {},\n        \"Errors\": {},\n        \"StorageSlot\": {},\n        \"IERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Initializable\": {},\n        \"UUPSUpgradeable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"DeployLevelOne\": {\n            \"run()\": {\n                \"impacts\": [\n                    \"run()\",\n                    \"deployLevelOne()\",\n                    \"getProxyAddress()\",\n                    \"getImplementationAddress()\",\n                    \"getUSDC()\"\n                ],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"deployLevelOne()\": {\n                \"impacts\": [\n                    \"run()\",\n                    \"deployLevelOne()\",\n                    \"getProxyAddress()\",\n                    \"getImplementationAddress()\",\n                    \"getUSDC()\"\n                ],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getProxyAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getImplementationAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getUSDC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getSchoolFees()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": {\n                \"impacts\": [\n                    \"run()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"deployLevelTwo()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"run()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            }\n        },\n        \"LevelOne\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"initialize(address,uint256,address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"enroll()\",\n                    \"getPrincipal()\",\n                    \"getSchoolFeesCost()\",\n                    \"getSchoolFeesToken()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"enroll()\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalStudents()\",\n                    \"getListOfStudents()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getSchoolFeesCost()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getSchoolFeesToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getTotalTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"getTotalStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"expel(address)\"\n                ]\n            },\n            \"getListOfStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"expel(address)\"\n                ]\n            },\n            \"getListOfTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"getSessionStatus()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"getSessionEnd()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"addTeacher(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalTeachers()\",\n                    \"getListOfTeachers()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"removeTeacher(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalTeachers()\",\n                    \"getListOfTeachers()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"expel(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalStudents()\",\n                    \"getListOfStudents()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"startSession(uint256)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getSessionStatus()\",\n                    \"getSessionEnd()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"giveReview(address,bool)\": {\n                \"impacts\": [\n                    \"giveReview(address,bool)\"\n                ],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\"\n                ]\n            },\n            \"graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            }\n        },\n        \"LevelTwo\": {\n            \"graduate()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getSchoolFeesToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTotalTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTotalStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getListOfStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getListOfTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BeforeAfter\": {},\n        \"LevelOneAndGraduateTest\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"setUp()\",\n                    \"test_confirm_first_deployment_is_level_one()\",\n                    \"test_confirm_add_teacher()\",\n                    \"test_confirm_cannot_add_teacher_if_not_principal()\",\n                    \"test_confirm_cannot_add_teacher_twice()\",\n                    \"test_confirm_remove_teacher()\",\n                    \"test_confirm_enroll()\",\n                    \"test_confirm_cannot_enroll_without_school_fees()\",\n                    \"test_confirm_cannot_enroll_twice()\",\n                    \"test_confirm_can_give_review()\",\n                    \"test_confirm_can_graduate()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_first_deployment_is_level_one()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_add_teacher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_add_teacher_if_not_principal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_add_teacher_twice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_remove_teacher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_enroll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_enroll_without_school_fees()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_enroll_twice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_can_give_review()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_can_graduate()\": {\n                \"impacts\": [\n                    \"test_confirm_can_graduate()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\",\n                    \"test_confirm_can_graduate()\"\n                ]\n            }\n        },\n        \"Setup\": {},\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_initialize(address,uint256)\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"getTrackedTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedTeacherCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudentCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedStudent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_initialize(address,uint256)\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\",\n                    \"constructor()\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"getTrackedTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedTeacherCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudentCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedStudent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\",\n                    \"constructor()\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"testProperties()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"LibAddressSet\": {},\n        \"PropertiesAsserts\": {},\n        \"PropertiesLibString\": {},\n        \"MockUSDC\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC1967Proxy\": \"constructor(address,bytes)\",\n        \"ERC20\": \"constructor(string,string)\",\n        \"Properties\": \"constructor()\",\n        \"MockUSDC\": \"constructor()\"\n    },\n    \"have_external_calls\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"ERC1967Proxy\": [\n            \"constructor(address,bytes)\",\n            \"()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"DeployLevelOne\": [\n            \"deployLevelOne()\",\n            \"run()\"\n        ],\n        \"GraduateToLevelTwo\": [\n            \"deployLevelTwo()\",\n            \"setUp()\",\n            \"run()\"\n        ],\n        \"LevelOne\": [\n            \"graduateAndUpgrade(address,bytes)\",\n            \"enroll()\",\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_remove_teacher()\",\n            \"test_confirm_enroll()\",\n            \"test_confirm_can_graduate()\",\n            \"setUp()\",\n            \"test_confirm_add_teacher()\",\n            \"test_confirm_cannot_add_teacher_if_not_principal()\",\n            \"test_confirm_cannot_enroll_without_school_fees()\",\n            \"test_confirm_first_deployment_is_level_one()\",\n            \"failed()\",\n            \"test_confirm_cannot_add_teacher_twice()\",\n            \"test_confirm_cannot_enroll_twice()\",\n            \"test_confirm_can_give_review()\"\n        ],\n        \"Handler\": [\n            \"levelOne_initialize(address,uint256)\",\n            \"isTrackedTeacher(address)\",\n            \"getTrackedTeacherCount()\",\n            \"levelOne_enroll()\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_startSession(uint256)\",\n            \"getTrackedTeachers()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedStudent(address)\",\n            \"levelOne_giveReview(address,bool)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\",\n            \"levelOne_addTeacher(address)\",\n            \"getTrackedStudents()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_removeTeacher(address)\"\n        ],\n        \"Properties\": [\n            \"levelOne_initialize(address,uint256)\",\n            \"isTrackedTeacher(address)\",\n            \"getTrackedTeacherCount()\",\n            \"levelOne_enroll()\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_startSession(uint256)\",\n            \"getTrackedTeachers()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedStudent(address)\",\n            \"levelOne_giveReview(address,bool)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\",\n            \"levelOne_addTeacher(address)\",\n            \"getTrackedStudents()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_removeTeacher(address)\"\n        ]\n    },\n    \"use_balance\": {},\n    \"solc_versions\": [\n        \"0.8.26\"\n    ],\n    \"with_fallback\": [\n        \"Proxy\",\n        \"ERC1967Proxy\"\n    ],\n    \"with_receive\": []\n}", "markdown": "{\n    \"payable\": {\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"ERC1967Proxy\": [\n            \"()\",\n            \"constructor(address,bytes)\"\n        ],\n        \"Proxy\": [\n            \"()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"LevelOne\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"Properties\": [\n            \"constructor()\"\n        ]\n    },\n    \"timestamp\": {\n        \"LevelOne\": [\n            \"startSession(uint256)\",\n            \"giveReview(address,bool)\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_can_give_review()\"\n        ]\n    },\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"ERC20\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"LevelOne\": [\n            \"upgradeToAndCall(address,bytes)\",\n            \"enroll()\",\n            \"addTeacher(address)\",\n            \"removeTeacher(address)\",\n            \"expel(address)\",\n            \"startSession(uint256)\",\n            \"giveReview(address,bool)\",\n            \"graduateAndUpgrade(address,bytes)\"\n        ],\n        \"Handler\": [\n            \"levelOne_addTeacher(address)\",\n            \"levelOne_enroll()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_initialize(address,uint256)\",\n            \"levelOne_removeTeacher(address)\",\n            \"levelOne_startSession(uint256)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\"\n        ],\n        \"Properties\": [\n            \"levelOne_addTeacher(address)\",\n            \"levelOne_enroll()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_initialize(address,uint256)\",\n            \"levelOne_removeTeacher(address)\",\n            \"levelOne_startSession(uint256)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\"\n        ],\n        \"MockUSDC\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_add_teacher()\",\n            \"test_confirm_remove_teacher()\",\n            \"test_confirm_enroll()\",\n            \"test_confirm_can_give_review()\"\n        ],\n        \"Properties\": [\n            \"testProperties()\"\n        ]\n    },\n    \"constant_functions\": {\n        \"Script\": [\n            \"IS_SCRIPT()\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getRawBlockHeader(uint256)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"eip712HashStruct(string,bytes)\",\n            \"eip712HashStruct(string,string,bytes)\",\n            \"eip712HashType(string)\",\n            \"eip712HashType(string,string)\",\n            \"eip712HashTypedData(string)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomAddress()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint()\",\n            \"randomUint(uint256,uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getRawBlockHeader(uint256)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"foundryVersionAtLeast(string)\",\n            \"foundryVersionCmp(string)\",\n            \"getChain(string)\",\n            \"getChain(uint256)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"eip712HashStruct(string,bytes)\",\n            \"eip712HashStruct(string,string,bytes)\",\n            \"eip712HashType(string)\",\n            \"eip712HashType(string,string)\",\n            \"eip712HashTypedData(string)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomAddress()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint()\",\n            \"randomUint(uint256,uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"DevOpsTools\": [\n            \"vm()\",\n            \"RELATIVE_BROADCAST_PATH()\"\n        ],\n        \"IERC1363\": [\n            \"supportsInterface(bytes4)\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC1822Proxiable\": [\n            \"proxiableUUID()\"\n        ],\n        \"IBeacon\": [\n            \"implementation()\"\n        ],\n        \"ERC20\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20Metadata\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"proxiableUUID()\",\n            \"UPGRADE_INTERFACE_VERSION()\"\n        ],\n        \"DeployLevelOne\": [\n            \"getProxyAddress()\",\n            \"getImplementationAddress()\",\n            \"getUSDC()\",\n            \"getPrincipal()\",\n            \"getSchoolFees()\",\n            \"IS_SCRIPT()\",\n            \"principal()\",\n            \"schoolFees()\",\n            \"levelOneImplementation()\",\n            \"proxy()\"\n        ],\n        \"GraduateToLevelTwo\": [\n            \"IS_SCRIPT()\",\n            \"levelOneProxyAddress()\"\n        ],\n        \"LevelOne\": [\n            \"proxiableUUID()\",\n            \"getPrincipal()\",\n            \"getSchoolFeesCost()\",\n            \"getSchoolFeesToken()\",\n            \"getTotalTeachers()\",\n            \"getTotalStudents()\",\n            \"getListOfStudents()\",\n            \"getListOfTeachers()\",\n            \"getSessionStatus()\",\n            \"getSessionEnd()\",\n            \"UPGRADE_INTERFACE_VERSION()\",\n            \"reviewTime()\",\n            \"sessionEnd()\",\n            \"bursary()\",\n            \"cutOffScore()\",\n            \"isTeacher(address)\",\n            \"isStudent(address)\",\n            \"studentScore(address)\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\"\n        ],\n        \"LevelTwo\": [\n            \"getPrincipal()\",\n            \"getSchoolFeesToken()\",\n            \"getTotalTeachers()\",\n            \"getTotalStudents()\",\n            \"getListOfStudents()\",\n            \"getListOfTeachers()\",\n            \"sessionEnd()\",\n            \"bursary()\",\n            \"cutOffScore()\",\n            \"isTeacher(address)\",\n            \"isStudent(address)\",\n            \"studentScore(address)\",\n            \"TEACHER_WAGE_L2()\",\n            \"PRINCIPAL_WAGE_L2()\",\n            \"PRECISION()\"\n        ],\n        \"BeforeAfter\": [\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"test_confirm_first_deployment_is_level_one()\",\n            \"IS_TEST()\"\n        ],\n        \"Setup\": [\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"Handler\": [\n            \"getTrackedTeachers()\",\n            \"getTrackedStudents()\",\n            \"getTrackedTeacherCount()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedTeacher(address)\",\n            \"isTrackedStudent(address)\",\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"Properties\": [\n            \"getTrackedTeachers()\",\n            \"getTrackedStudents()\",\n            \"getTrackedTeacherCount()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedTeacher(address)\",\n            \"isTrackedStudent(address)\",\n            \"testProperties()\",\n            \"levelOne()\",\n            \"levelOneProxy()\",\n            \"levelOneImpl()\",\n            \"usdc()\",\n            \"TEACHER_WAGE()\",\n            \"PRINCIPAL_WAGE()\",\n            \"PRECISION()\",\n            \"SCHOOL_FEES()\",\n            \"principal()\"\n        ],\n        \"MockUSDC\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ]\n    },\n    \"constants_used\": {\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"ERC1967Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Proxy\": {\n            \"()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"DeployLevelOne\": {\n            \"run()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deployLevelOne()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"getPrincipal()\": [\n                [\n                    {\n                        \"value\": \"principal\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"getSchoolFees()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"No contract named \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"$.transactions[\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"].contractAddress\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ERC1967Proxy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\\\\",\n                        \"type\": \"bytes1\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"./broadcast\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"]\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"'\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"/\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \".json\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \".timestamp\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dry-run\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" has been deployed on chain \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No deployment artifacts were found for specified chain\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"].contractName\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"deployLevelTwo()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"run()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"LevelOne\": {\n            \"upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24440054405305269366569402256811496959409073762505157381672968839269610695612\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"enroll()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"expel(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2419200\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"Reviews can only be given once per week\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"604800\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student review count exceeded!!!\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"35\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"LevelTwo\": {\n            \"graduate()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"LevelOneAndGraduateTest\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"first_teacher\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"six_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"fifth_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"first_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"second_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"second_teacher\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"third_student\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"fourth_student\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"test_confirm_first_deployment_is_level_one()\": [\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"35\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"test_confirm_add_teacher()\": [\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_add_teacher_if_not_principal()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"588585904\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_add_teacher_twice()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2524366672\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_remove_teacher()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_enroll()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_enroll_without_school_fees()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"no_school_fees\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"test_confirm_cannot_enroll_twice()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3353848930\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"test_confirm_can_give_review()\": [\n                [\n                    {\n                        \"value\": \"90\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"604800\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"test_confirm_can_graduate()\": [\n                [\n                    {\n                        \"value\": \"645326474426547203313410069153905908525362434349\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(uint256)\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_enroll()\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teachers and principal cannot enroll\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_expel(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student not found\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot expel during session\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only teacher can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_initialize(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher not found\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Session already started\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isTrackedTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"isTrackedStudent(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_enroll()\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student already exists\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot add zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teachers and principal cannot enroll\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_expel(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Student not found\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Cannot expel during session\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_giveReview(address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only teacher can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_graduateAndUpgrade(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_initialize(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"Cannot be zero address\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"levelOne_removeTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Teacher not found\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_startSession(uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Session already started\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"levelOne_upgradeToAndCall(address,bytes)\": [\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Only principal can call this function\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isTrackedTeacher(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"isTrackedStudent(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"5000000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"341575\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3276841397\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"testProperties()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"MockUSDC\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"Mock USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"mUSDC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"mint(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Proxy\": {\n            \"()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UUPSUpgradeable\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"LevelOne\": {\n            \"upgradeToAndCall(address,bytes)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"enroll()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"False\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"2419200\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"giveReview(address,bool)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"5\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"graduateAndUpgrade(address,bytes)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"LevelOneAndGraduateTest\": {\n            \"test_confirm_add_teacher()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"test_confirm_remove_teacher()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"False\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"test_confirm_can_give_review()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"604800\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"90\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedTeacher(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedStudent(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"True\",\n                            \"type\": \"bool\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedTeacher(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isTrackedStudent(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"Script\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prankHere(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdConstants\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRawBlockHeader(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopRecord()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashTypedData(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSeed(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRawBlockHeader(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopRecord()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes,uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachBlob(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionAtLeast(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"foundryVersionCmp(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChain(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashStruct(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eip712HashTypedData(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setSeed(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"shuffle(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sort(uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accessList((address,bytes32[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cool(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coolSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"noAccessList()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warmSlot(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCreate2(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"interceptInitcode()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"DevOpsTools\": {},\n        \"StringUtils\": {},\n        \"IERC1363\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC1967\": {},\n        \"IERC1822Proxiable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Errors\": {},\n        \"IERC721Errors\": {},\n        \"IERC1155Errors\": {},\n        \"ERC1967Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC1967Utils\": {},\n        \"Proxy\": {\n            \"()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IBeacon\": {\n            \"implementation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC20\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Metadata\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"SafeERC20\": {},\n        \"Address\": {},\n        \"Context\": {},\n        \"Errors\": {},\n        \"StorageSlot\": {},\n        \"IERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Initializable\": {},\n        \"UUPSUpgradeable\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"DeployLevelOne\": {\n            \"run()\": {\n                \"impacts\": [\n                    \"run()\",\n                    \"deployLevelOne()\",\n                    \"getProxyAddress()\",\n                    \"getImplementationAddress()\",\n                    \"getUSDC()\"\n                ],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"deployLevelOne()\": {\n                \"impacts\": [\n                    \"run()\",\n                    \"deployLevelOne()\",\n                    \"getProxyAddress()\",\n                    \"getImplementationAddress()\",\n                    \"getUSDC()\"\n                ],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getProxyAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getImplementationAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getUSDC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"run()\",\n                    \"deployLevelOne()\"\n                ]\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getSchoolFees()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"GraduateToLevelTwo\": {\n            \"setUp()\": {\n                \"impacts\": [\n                    \"run()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"deployLevelTwo()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"run()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            }\n        },\n        \"LevelOne\": {\n            \"proxiableUUID()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"initialize(address,uint256,address)\": {\n                \"impacts\": [\n                    \"upgradeToAndCall(address,bytes)\",\n                    \"enroll()\",\n                    \"getPrincipal()\",\n                    \"getSchoolFeesCost()\",\n                    \"getSchoolFeesToken()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"enroll()\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalStudents()\",\n                    \"getListOfStudents()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getSchoolFeesCost()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getSchoolFeesToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\"\n                ]\n            },\n            \"getTotalTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"getTotalStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"expel(address)\"\n                ]\n            },\n            \"getListOfStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"expel(address)\"\n                ]\n            },\n            \"getListOfTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"getSessionStatus()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"getSessionEnd()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"addTeacher(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalTeachers()\",\n                    \"getListOfTeachers()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"removeTeacher(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalTeachers()\",\n                    \"getListOfTeachers()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"giveReview(address,bool)\",\n                    \"graduateAndUpgrade(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            },\n            \"expel(address)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getTotalStudents()\",\n                    \"getListOfStudents()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"startSession(uint256)\": {\n                \"impacts\": [\n                    \"enroll()\",\n                    \"getSessionStatus()\",\n                    \"getSessionEnd()\",\n                    \"addTeacher(address)\",\n                    \"expel(address)\",\n                    \"startSession(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"startSession(uint256)\"\n                ]\n            },\n            \"giveReview(address,bool)\": {\n                \"impacts\": [\n                    \"giveReview(address,bool)\"\n                ],\n                \"is_impacted_by\": [\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\",\n                    \"expel(address)\",\n                    \"giveReview(address,bool)\"\n                ]\n            },\n            \"graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,uint256,address)\",\n                    \"enroll()\",\n                    \"addTeacher(address)\",\n                    \"removeTeacher(address)\"\n                ]\n            }\n        },\n        \"LevelTwo\": {\n            \"graduate()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPrincipal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getSchoolFeesToken()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTotalTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTotalStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getListOfStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getListOfTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BeforeAfter\": {},\n        \"LevelOneAndGraduateTest\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"setUp()\",\n                    \"test_confirm_first_deployment_is_level_one()\",\n                    \"test_confirm_add_teacher()\",\n                    \"test_confirm_cannot_add_teacher_if_not_principal()\",\n                    \"test_confirm_cannot_add_teacher_twice()\",\n                    \"test_confirm_remove_teacher()\",\n                    \"test_confirm_enroll()\",\n                    \"test_confirm_cannot_enroll_without_school_fees()\",\n                    \"test_confirm_cannot_enroll_twice()\",\n                    \"test_confirm_can_give_review()\",\n                    \"test_confirm_can_graduate()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_first_deployment_is_level_one()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_add_teacher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_add_teacher_if_not_principal()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_add_teacher_twice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_remove_teacher()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_enroll()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_enroll_without_school_fees()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_cannot_enroll_twice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_can_give_review()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"test_confirm_can_graduate()\": {\n                \"impacts\": [\n                    \"test_confirm_can_graduate()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\",\n                    \"test_confirm_can_graduate()\"\n                ]\n            }\n        },\n        \"Setup\": {},\n        \"Handler\": {\n            \"levelOne_addTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_initialize(address,uint256)\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"levelOne_upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\"\n                ]\n            },\n            \"getTrackedTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedTeacherCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudentCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedStudent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Properties\": {\n            \"levelOne_addTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_enroll()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_expel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_giveReview(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_graduateAndUpgrade(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_initialize(address,uint256)\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\",\n                    \"constructor()\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_removeTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_startSession(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"levelOne_upgradeToAndCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"levelOne_enroll()\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"getTrackedTeachers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudents()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedTeacherCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getTrackedStudentCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedTeacher(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isTrackedStudent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"levelOne_addTeacher(address)\",\n                    \"levelOne_enroll()\",\n                    \"levelOne_expel(address)\",\n                    \"levelOne_giveReview(address,bool)\",\n                    \"levelOne_graduateAndUpgrade(address,bytes)\",\n                    \"levelOne_initialize(address,uint256)\",\n                    \"levelOne_removeTeacher(address)\",\n                    \"levelOne_startSession(uint256)\",\n                    \"levelOne_upgradeToAndCall(address,bytes)\",\n                    \"constructor()\"\n                ],\n                \"is_impacted_by\": [\n                    \"levelOne_initialize(address,uint256)\",\n                    \"constructor()\"\n                ]\n            },\n            \"testProperties()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"LibAddressSet\": {},\n        \"PropertiesAsserts\": {},\n        \"PropertiesLibString\": {},\n        \"MockUSDC\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC1967Proxy\": \"constructor(address,bytes)\",\n        \"ERC20\": \"constructor(string,string)\",\n        \"Properties\": \"constructor()\",\n        \"MockUSDC\": \"constructor()\"\n    },\n    \"have_external_calls\": {\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"ERC1967Proxy\": [\n            \"constructor(address,bytes)\",\n            \"()\"\n        ],\n        \"UUPSUpgradeable\": [\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"DeployLevelOne\": [\n            \"deployLevelOne()\",\n            \"run()\"\n        ],\n        \"GraduateToLevelTwo\": [\n            \"deployLevelTwo()\",\n            \"setUp()\",\n            \"run()\"\n        ],\n        \"LevelOne\": [\n            \"graduateAndUpgrade(address,bytes)\",\n            \"enroll()\",\n            \"upgradeToAndCall(address,bytes)\"\n        ],\n        \"LevelOneAndGraduateTest\": [\n            \"test_confirm_remove_teacher()\",\n            \"test_confirm_enroll()\",\n            \"test_confirm_can_graduate()\",\n            \"setUp()\",\n            \"test_confirm_add_teacher()\",\n            \"test_confirm_cannot_add_teacher_if_not_principal()\",\n            \"test_confirm_cannot_enroll_without_school_fees()\",\n            \"test_confirm_first_deployment_is_level_one()\",\n            \"failed()\",\n            \"test_confirm_cannot_add_teacher_twice()\",\n            \"test_confirm_cannot_enroll_twice()\",\n            \"test_confirm_can_give_review()\"\n        ],\n        \"Handler\": [\n            \"levelOne_initialize(address,uint256)\",\n            \"isTrackedTeacher(address)\",\n            \"getTrackedTeacherCount()\",\n            \"levelOne_enroll()\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_startSession(uint256)\",\n            \"getTrackedTeachers()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedStudent(address)\",\n            \"levelOne_giveReview(address,bool)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\",\n            \"levelOne_addTeacher(address)\",\n            \"getTrackedStudents()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_removeTeacher(address)\"\n        ],\n        \"Properties\": [\n            \"levelOne_initialize(address,uint256)\",\n            \"isTrackedTeacher(address)\",\n            \"getTrackedTeacherCount()\",\n            \"levelOne_enroll()\",\n            \"levelOne_graduateAndUpgrade(address,bytes)\",\n            \"levelOne_startSession(uint256)\",\n            \"getTrackedTeachers()\",\n            \"getTrackedStudentCount()\",\n            \"isTrackedStudent(address)\",\n            \"levelOne_giveReview(address,bool)\",\n            \"levelOne_upgradeToAndCall(address,bytes)\",\n            \"levelOne_addTeacher(address)\",\n            \"getTrackedStudents()\",\n            \"levelOne_expel(address)\",\n            \"levelOne_removeTeacher(address)\"\n        ]\n    },\n    \"use_balance\": {},\n    \"solc_versions\": [\n        \"0.8.26\"\n    ],\n    \"with_fallback\": [\n        \"Proxy\",\n        \"ERC1967Proxy\"\n    ],\n    \"with_receive\": []\n}", "first_markdown_element": "", "id": "fc836e185c01e878108bbdd9dc662056c7c8864f8495f15607ef1c80fa036c70", "printer": "echidna"}]}}
